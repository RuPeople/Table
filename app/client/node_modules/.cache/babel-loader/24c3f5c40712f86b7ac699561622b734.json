{"ast":null,"code":"var _jsxFileName = \"/home/rupeople/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/web/1. Now/WelbeX/app/client/src/Components/Table/Table_bamf.jsx\",\n    _s = $RefreshSig$();\n\nimport { Table } from \"react-bootstrap\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport { fetchRows } from \"../../http/dataApi\";\nimport Pagination_bamf from \"../Pagination/Pagination_bamf\";\nimport Filter from \"../Filter/Filter\";\nimport TableInput from \"../TableInput/TableInput\";\nimport { Context } from \"../../index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Table_bamf = _s(observer(_c = _s(() => {\n  _s();\n\n  const {\n    rows\n  } = useContext(Context);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [sortedTableRows, setSortedTableRows] = useState([]);\n  const lastRowIndex = currentPage * rows.rowsPerPage;\n  const firstRowIndex = lastRowIndex - rows.rowsPerPage;\n  const currentRows = sortedTableRows.slice(firstRowIndex, lastRowIndex);\n  useEffect(() => {\n    fetchRows().then(data => {\n      rows.setRows(data);\n      const sorted = [...rows.rows].sort((a, b) => a[\"col_name\"].toLowerCase() > b[\"col_name\"].toLowerCase() ? 1 : -1);\n      setSortedTableRows(sorted);\n      console.log(data);\n    });\n  }, []);\n  const [order, setOrder] = useState(\"ASC\");\n\n  const sortByColumn = column => {\n    if (column === \"col_name\") {\n      if (order === \"ASC\") {\n        const sorted = [...rows.rows].sort((a, b) => a[column].toLowerCase() > b[column].toLowerCase() ? 1 : -1);\n        setSortedTableRows(sorted);\n        setOrder(\"DSC\");\n      }\n\n      if (order === \"DSC\") {\n        const sorted = [...rows.rows].sort((a, b) => a[column].toLowerCase() < b[column].toLowerCase() ? 1 : -1);\n        setSortedTableRows(sorted);\n        setOrder(\"ASC\");\n      }\n    } else {\n      if (order === \"ASC\") {\n        const sorted = [...rows.rows].sort((a, b) => a[column] - b[column]);\n        setSortedTableRows(sorted);\n        setOrder(\"DSC\");\n      }\n\n      if (order === \"DSC\") {\n        const sorted = [...rows.rows].sort((a, b) => b[column] - a[column]);\n        setSortedTableRows(sorted);\n        setOrder(\"ASC\");\n      }\n    }\n  };\n\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-flex flex-row\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(TableInput, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        className: \"my-auto\",\n        striped: true,\n        bordered: true,\n        hover: true,\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              onClick: () => sortByColumn(\"col_name\"),\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              onClick: () => sortByColumn(\"col_count\"),\n              children: \"Count\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              onClick: () => sortByColumn(\"col_distance\"),\n              children: \"Distance\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: currentRows.map(row => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"col-3\",\n              children: row.col_date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"col-3\",\n              children: row.col_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"col-3\",\n              children: row.col_count\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"col-3\",\n              children: row.col_distance\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 29\n            }, this)]\n          }, row.col_id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Pagination_bamf, {\n        paginate: paginate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Filter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n}, \"nGZowIe0MRsQAj50F36Ygca5a9g=\")), \"nGZowIe0MRsQAj50F36Ygca5a9g=\");\n\n_c2 = Table_bamf;\nexport default Table_bamf;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Table_bamf$observer\");\n$RefreshReg$(_c2, \"Table_bamf\");","map":{"version":3,"names":["Table","React","useContext","useEffect","useState","observer","fetchRows","Pagination_bamf","Filter","TableInput","Context","Table_bamf","rows","currentPage","setCurrentPage","sortedTableRows","setSortedTableRows","lastRowIndex","rowsPerPage","firstRowIndex","currentRows","slice","then","data","setRows","sorted","sort","a","b","toLowerCase","console","log","order","setOrder","sortByColumn","column","paginate","pageNumber","map","row","col_date","col_name","col_count","col_distance","col_id"],"sources":["/home/rupeople/Рабочий стол/web/1. Now/WelbeX/app/client/src/Components/Table/Table_bamf.jsx"],"sourcesContent":["import {Table} from \"react-bootstrap\";\n\nimport React, {useContext, useEffect, useState} from \"react\";\nimport {observer} from \"mobx-react-lite\";\nimport {fetchRows} from \"../../http/dataApi\";\nimport Pagination_bamf from \"../Pagination/Pagination_bamf\";\nimport Filter from \"../Filter/Filter\";\nimport TableInput from \"../TableInput/TableInput\";\nimport {Context} from \"../../index\";\n\nconst Table_bamf = observer(() => {\n\n    const {rows} = useContext(Context)\n\n    const [currentPage, setCurrentPage] = useState(1)\n\n    const [sortedTableRows, setSortedTableRows] = useState([])\n\n    const lastRowIndex = currentPage * rows.rowsPerPage\n    const firstRowIndex = lastRowIndex - rows.rowsPerPage\n    const currentRows = sortedTableRows.slice(firstRowIndex, lastRowIndex)\n\n    useEffect(() => {\n        fetchRows().then(data => {\n            rows.setRows(data)\n            const sorted = [...rows.rows].sort((a,b) => a[\"col_name\"].toLowerCase() > b[\"col_name\"].toLowerCase() ? 1:-1)\n            setSortedTableRows(sorted)\n            console.log(data)\n        })\n    },[])\n\n\n    const [order, setOrder] = useState(\"ASC\")\n    const sortByColumn = (column) => {\n        if (column === \"col_name\") {\n            if (order === \"ASC\") {\n                const sorted = [...rows.rows].sort((a,b) => a[column].toLowerCase() > b[column].toLowerCase() ? 1:-1)\n                setSortedTableRows(sorted)\n                setOrder(\"DSC\")\n            }\n            if (order === \"DSC\") {\n                const sorted = [...rows.rows].sort((a,b) => a[column].toLowerCase() < b[column].toLowerCase() ? 1:-1)\n                setSortedTableRows(sorted)\n                setOrder(\"ASC\")\n            }\n        }\n        else {\n            if (order === \"ASC\") {\n                const sorted = [...rows.rows].sort((a,b) => a[column] - b[column])\n                setSortedTableRows(sorted)\n                setOrder(\"DSC\")\n            }\n            if (order === \"DSC\") {\n                const sorted = [...rows.rows].sort((a,b) => b[column] - a[column])\n                setSortedTableRows(sorted)\n                setOrder(\"ASC\")\n            }\n        }\n    }\n\n\n\n    const paginate = pageNumber => setCurrentPage(pageNumber)\n\n    return (\n        <div className=\"d-flex flex-row\">\n            <div>\n                <TableInput/>\n                <Table className=\"my-auto\" striped bordered hover>\n                    <thead>\n                    <tr>\n                        <th>\n                            Date\n                        </th>\n                        <th\n                            onClick={() => sortByColumn(\"col_name\")}>Name\n                        </th>\n                        <th\n                            onClick={() => sortByColumn(\"col_count\")}>\n                            Count\n                        </th>\n                        <th\n                            onClick={() => sortByColumn(\"col_distance\")}>\n                            Distance\n                        </th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {currentRows.map(row => (\n                        <tr key={row.col_id}>\n                            <td className=\"col-3\">{row.col_date}</td>\n                            <td className=\"col-3\">{row.col_name}</td>\n                            <td className=\"col-3\">{row.col_count}</td>\n                            <td className=\"col-3\">{row.col_distance}</td>\n                        </tr>\n                    ))}\n                    </tbody>\n                </Table>\n                <Pagination_bamf paginate={paginate}/>\n            </div>\n            <Filter  />\n        </div>\n    );\n});\n\nexport default Table_bamf;"],"mappings":"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"},"metadata":{},"sourceType":"module"}