{"ast":null,"code":"var _jsxFileName = \"/home/rupeople/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/web/1. Now/WelbeX/app/client/src/Components/Table/Table_bamf.jsx\",\n    _s = $RefreshSig$();\n\nimport { Table } from \"react-bootstrap\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport { fetchRows } from \"../../http/dataApi\";\nimport Pagination_bamf from \"../Pagination/Pagination_bamf\";\nimport Filter from \"../Filter/Filter\";\nimport TableInput from \"../TableInput/TableInput\";\nimport { Context } from \"../../index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Table_bamf = _s(observer(_c = _s(() => {\n  _s();\n\n  const [tableRows, setTableRows] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [rowsPerPage] = useState(3);\n  useEffect(() => {\n    fetchRows().then(data => {\n      setTableRows(data);\n      const sorted = [...tableRows].sort((a, b) => a[\"col_name\"].toLowerCase() > b[\"col_name\"].toLowerCase() ? 1 : -1);\n      setSortedTableRows(sorted);\n      setOrder(\"DSC\");\n    });\n  }, []);\n  const [sortedTableRows, setSortedTableRows] = useState([]);\n  const [order, setOrder] = useState(\"ASC\");\n\n  const sortByColumnString = column => {\n    if (order === \"ASC\") {\n      const sorted = [...tableRows].sort((a, b) => a[column].toLowerCase() > b[column].toLowerCase() ? 1 : -1);\n      setSortedTableRows(sorted);\n      setOrder(\"DSC\");\n    }\n\n    if (order === \"DSC\") {\n      const sorted = [...tableRows].sort((a, b) => a[column].toLowerCase() < b[column].toLowerCase() ? 1 : -1);\n      setSortedTableRows(sorted);\n      setOrder(\"ASC\");\n    }\n  };\n\n  const lastRowIndex = currentPage * rowsPerPage;\n  const firstRowIndex = lastRowIndex - rowsPerPage;\n  const currentRows = sortedTableRows.slice(firstRowIndex, lastRowIndex);\n\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-flex flex-row\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(TableInput, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        className: \"my-auto\",\n        striped: true,\n        bordered: true,\n        hover: true,\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              onClick: () => sortByColumnString(\"col_name\"),\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: currentRows.map(row => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"col-3\",\n              children: row.col_date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"col-3\",\n              children: row.col_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"col-3\",\n              children: row.col_count\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"col-3\",\n              children: row.col_distance\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 29\n            }, this)]\n          }, row.col_id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Pagination_bamf, {\n        rowsPerPage: rowsPerPage,\n        totalRows: tableRows.length,\n        paginate: paginate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Filter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n}, \"2lrIuMGbWrjt5RdcUpooU41z6UA=\")), \"2lrIuMGbWrjt5RdcUpooU41z6UA=\");\n\n_c2 = Table_bamf;\nexport default Table_bamf;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Table_bamf$observer\");\n$RefreshReg$(_c2, \"Table_bamf\");","map":{"version":3,"names":["Table","React","useContext","useEffect","useState","observer","fetchRows","Pagination_bamf","Filter","TableInput","Context","Table_bamf","tableRows","setTableRows","currentPage","setCurrentPage","rowsPerPage","then","data","sorted","sort","a","b","toLowerCase","setSortedTableRows","setOrder","sortedTableRows","order","sortByColumnString","column","lastRowIndex","firstRowIndex","currentRows","slice","paginate","pageNumber","map","row","col_date","col_name","col_count","col_distance","col_id","length"],"sources":["/home/rupeople/Рабочий стол/web/1. Now/WelbeX/app/client/src/Components/Table/Table_bamf.jsx"],"sourcesContent":["import {Table} from \"react-bootstrap\";\n\nimport React, {useContext, useEffect, useState} from \"react\";\nimport {observer} from \"mobx-react-lite\";\nimport {fetchRows} from \"../../http/dataApi\";\nimport Pagination_bamf from \"../Pagination/Pagination_bamf\";\nimport Filter from \"../Filter/Filter\";\nimport TableInput from \"../TableInput/TableInput\";\nimport {Context} from \"../../index\";\n\nconst Table_bamf = observer(() => {\n\n    const [tableRows, setTableRows] = useState([])\n    const [currentPage, setCurrentPage] = useState(1)\n    const [rowsPerPage] = useState(3)\n\n    useEffect(() => {\n        fetchRows().then(data => {\n            setTableRows(data)\n            const sorted = [...tableRows].sort((a,b) => a[\"col_name\"].toLowerCase() > b[\"col_name\"].toLowerCase() ? 1:-1)\n            setSortedTableRows(sorted)\n            setOrder(\"DSC\")\n        })\n    },[])\n\n\n    const [sortedTableRows, setSortedTableRows] = useState([])\n\n    const [order, setOrder] = useState(\"ASC\")\n    const sortByColumnString = (column) => {\n        if (order === \"ASC\") {\n            const sorted = [...tableRows].sort((a,b) => a[column].toLowerCase() > b[column].toLowerCase() ? 1:-1)\n            setSortedTableRows(sorted)\n            setOrder(\"DSC\")\n        }\n        if (order === \"DSC\") {\n            const sorted = [...tableRows].sort((a,b) => a[column].toLowerCase() < b[column].toLowerCase() ? 1:-1)\n            setSortedTableRows(sorted)\n            setOrder(\"ASC\")\n        }\n    }\n\n\n    const lastRowIndex = currentPage * rowsPerPage\n    const firstRowIndex = lastRowIndex - rowsPerPage\n    const currentRows = sortedTableRows.slice(firstRowIndex, lastRowIndex)\n\n    const paginate = pageNumber =>setCurrentPage(pageNumber)\n\n    return (\n        <div className=\"d-flex flex-row\">\n            <div>\n                <TableInput/>\n                <Table className=\"my-auto\" striped bordered hover>\n                    <thead>\n                    <tr>\n                        <th>\n                            Date\n                        </th>\n                        <th\n                            onClick={() => sortByColumnString(\"col_name\")}>Name\n                        </th>\n                        {/*<th\n                            onClick={() => sortByColumn(\"col_count\")}>\n                            Count\n                        </th>\n                        <th\n                            onClick={() => sortByColumn(\"col_distance\")}>\n                            Distance\n                        </th>*/}\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {currentRows.map(row => (\n                        <tr key={row.col_id}>\n                            <td className=\"col-3\">{row.col_date}</td>\n                            <td className=\"col-3\">{row.col_name}</td>\n                            <td className=\"col-3\">{row.col_count}</td>\n                            <td className=\"col-3\">{row.col_distance}</td>\n                        </tr>\n                    ))}\n                    </tbody>\n                </Table>\n                <Pagination_bamf rowsPerPage={rowsPerPage} totalRows={tableRows.length} paginate={paginate}/>\n            </div>\n            <Filter  />\n        </div>\n    );\n});\n\nexport default Table_bamf;"],"mappings":"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"},"metadata":{},"sourceType":"module"}